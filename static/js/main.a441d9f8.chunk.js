(this["webpackJsonpgame-of-life"]=this["webpackJsonpgame-of-life"]||[]).push([[0],[,,,,,,function(e,t,n){},,function(e,t,n){e.exports=n(15)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),l=n(7),r=n.n(l),i=(n(13),n(14),n(1)),s=n(2),c=n(4),u=n(3),d=(n(6),{CELL_SIZE:20,WIDTH:500,HEIGHT:500}),h=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"render",value:function(){var e=this.props,t=e.x,n=e.y;return o.a.createElement("div",{className:this.props.darkMode?"darkModeCell":"Cell",style:{left:"".concat(d.CELL_SIZE*t+1,"px"),top:"".concat(d.CELL_SIZE*n+1,"px"),width:"".concat(d.CELL_SIZE-1,"px"),height:"".concat(d.CELL_SIZE-1,"px")}})}}]),n}(o.a.Component);var m=function(){return o.a.createElement("div",{class:"container"},o.a.createElement("h3",null,"About Conway's Game of Life:"),o.a.createElement("p",null,"Life is played on a grid of cells. A cell can be live or dead. A live cell is shown by putting a marker on it. A dead cell is shown by leaving it empty. Each cell in the grid has a neighborhood consisting of the eight cells in every direction including diagonals. We count the live neighbors for each cell and what happens next depends on this number."),o.a.createElement("h4",null,"Rules:"),o.a.createElement("p",null,"1. A live cell with only one neighbor dies (loneliness)"),o.a.createElement("p",null,"2. A live cell with two or three neighbors has no change (survival)"),o.a.createElement("p",null,"3. A dead cell with exactly three neighbors becomes alive (birth)"),o.a.createElement("p",null,"4. A live cell with four or more neighbors dies (overcrowding) "))},f=1,E=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.call(this)).state={cells:[],isRunning:!1,interval:100,darkMode:!1},e.handleClick=function(t){var n=e.getElementOffset(),a=t.clientX-n.x,o=t.clientY-n.y,l=Math.floor(a/d.CELL_SIZE),r=Math.floor(o/d.CELL_SIZE);l>=0&&l<=e.cols&&r>=0&&r<=e.rows&&(e.board[r][l]=!e.board[r][l]),e.setState({cells:e.makeCells()})},e.runGame=function(){e.setState({isRunning:!0}),e.runIteration()},e.stopGame=function(){e.setState({isRunning:!1}),e.timeoutHandler&&(window.clearTimeout(e.timeoutHandler),e.timeoutHandler=null)},e.handleIntervalChange=function(t){e.setState({interval:t.target.value})},e.handleClear=function(){e.board=e.makeEmptyBoard(),e.setState({cells:e.makeCells()}),f=1},e.handleRandom=function(){for(var t=0;t<e.rows;t++)for(var n=0;n<e.cols;n++)e.board[t][n]=Math.random()>=.5;e.setState({cells:e.makeCells()})},e.handleNext=function(){e.setState({isRunning:!0}),e.runIteration(),e.stopGame()},e.handleDarkMode=function(){!0===e.state.darkMode?e.setState({darkMode:!1}):e.setState({darkMode:!0})},e.rows=d.HEIGHT/d.CELL_SIZE,e.cols=d.WIDTH/d.CELL_SIZE,e.board=e.makeEmptyBoard(),e}return Object(s.a)(n,[{key:"makeEmptyBoard",value:function(){for(var e=[],t=0;t<this.rows;t++){e[t]=[];for(var n=0;n<this.cols;n++)e[t][n]=!1}return e}},{key:"getElementOffset",value:function(){var e=this.boardRef.getBoundingClientRect(),t=document.documentElement;return{x:e.left+window.pageXOffset-t.clientLeft,y:e.top+window.pageYOffset-t.clientTop}}},{key:"makeCells",value:function(){for(var e=[],t=0;t<this.rows;t++)for(var n=0;n<this.cols;n++)this.board[t][n]&&e.push({x:n,y:t});return e}},{key:"runIteration",value:function(){for(var e=this,t=this.makeEmptyBoard(),n=0;n<this.rows;n++)for(var a=0;a<this.cols;a++){var o=this.calculateNeighbors(this.board,a,n);this.board[n][a]?t[n][a]=2===o||3===o:this.board[n][a]||3!==o||(t[n][a]=!0)}this.board=t,this.setState({cells:this.makeCells()}),f++,this.timeoutHandler=window.setTimeout((function(){e.runIteration()}),this.state.interval)}},{key:"calculateNeighbors",value:function(e,t,n){for(var a=0,o=[[-1,-1],[-1,0],[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1]],l=0;l<o.length;l++){var r=o[l],i=n+r[0],s=t+r[1];s>=0&&s<this.cols&&i>=0&&i<this.rows&&e[i][s]&&a++}return a}},{key:"render",value:function(){var e=this,t=this.state,n=t.cells,a=t.interval,l=t.isRunning;return o.a.createElement("div",null,o.a.createElement("div",null,"Generation: ",f),o.a.createElement("div",{className:this.state.darkMode?"darkModeBoard":"Board",style:{width:d.WIDTH,height:d.HEIGHT,backgroundSize:"".concat(d.CELL_SIZE,"px ").concat(d.CELL_SIZE,"px")},onClick:this.handleClick,ref:function(t){e.boardRef=t}},n.map((function(t){return o.a.createElement(h,{darkMode:e.state.darkMode,x:t.x,y:t.y,key:"".concat(t.x,",").concat(t.y)})}))),o.a.createElement("div",{className:"controls"},"Speed: ",o.a.createElement("input",{value:a,onChange:this.handleIntervalChange})," msec",l?o.a.createElement("button",{className:"button",onClick:this.stopGame},"Stop"):o.a.createElement("button",{className:"button",onClick:this.runGame},"Run"),o.a.createElement("button",{className:"button",onClick:this.handleNext},"Next"),o.a.createElement("button",{className:"button",onClick:this.handleRandom},"Random"),o.a.createElement("button",{className:"button",onClick:this.handleClear},"Clear"),o.a.createElement("button",{className:"button",onClick:this.handleDarkMode},"Dark Mode")),o.a.createElement("div",{className:"rules"},o.a.createElement(m,null)))}}]),n}(o.a.Component);var v=function(){return o.a.createElement("div",{className:"App"},o.a.createElement("h1",null,"Conway's Game of Life"),o.a.createElement(E,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(v,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[8,1,2]]]);
//# sourceMappingURL=main.a441d9f8.chunk.js.map